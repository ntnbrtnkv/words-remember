datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password String

  tags Tag[]
  definitions Definition[]
  Knowledge   Knowledge[]
}

model Tag {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String

  user      User        @relation(fields: [userId], references: [id])
  userId    String      @db.Uuid

  definitions Definition[]

  @@index([name, userId])
  @@unique([name, userId])
}

model Definition {
  id          String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  word        String
  description String

  tags Tag[]
  Knowledge Knowledge[]

  user      User        @relation(fields: [userId], references: [id])
  userId    String      @db.Uuid

  @@index([userId])
  @@unique([word, userId])
}

model Knowledge {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  right Int @default(0)
  wrong Int @default(0)

  definition   Definition @relation(fields: [definitionId], references: [id], onDelete: Cascade)
  definitionId String     @db.Uuid

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.Uuid

  @@index([definitionId, userId])
}
